services:
  storefront:
    container_name: storefront
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        - SALEOR_API_URL=http://localhost:8000/graphql/ # handled by nginx
        - STOREFRONT_URL=http://localhost:3000
        - CLOUD_DEPLOYMENT_URL=
    ports:
      - 3000:3000
    networks:
      - saleor-backend-tier
    command: sh -c '(nginx &) && pnpm turbo run start --filter=storefront...'
  products-importer:
    container_name: products-importer
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        - SALEOR_API_URL=http://localhost:8000/graphql/ # handled by nginx
        - PRODUCTS_IMPORTER_URL=http://localhost:3004
        - STOREFRONT_URL=http://localhost:3000
        - CLOUD_DEPLOYMENT_URL=
    ports:
      - 3004:3004
    networks:
      - saleor-backend-tier
    command: sh -c '(nginx &) && pnpm turbo run start --filter=products-importer...'
  manage-promotions:
    container_name: manage-promotions
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        - SALEOR_API_URL=http://localhost:8000/graphql/ # handled by nginx
        - MANAGE_PROMOTIONS_URL=http://localhost:3005
        - STOREFRONT_URL=http://localhost:3000
        - CLOUD_DEPLOYMENT_URL=
    ports:
      - 3005:3005
    networks:
      - saleor-backend-tier
    command: sh -c '(nginx &) && pnpm turbo run start --filter=manage-promotions...'
  search:
    container_name: search
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        - SALEOR_API_URL=http://localhost:8000/graphql/ # handled by nginx
    ports:
      - 3006:3006
    networks:
      - saleor-backend-tier
    command: sh -c '(nginx &) && pnpm turbo run start --filter=search...'
  manage-stock:
    container_name: manage-stock
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        - SALEOR_API_URL=http://localhost:8000/graphql/ # handled by nginx
    ports:
      - 3007:3007
    networks:
      - saleor-backend-tier
    command: sh -c '(nginx &) && pnpm turbo run start --filter=manage-stock...'

networks:
  saleor-backend-tier:
    external: true
